plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.eigenbaumarkt.spring5_mongodb_reactive_recipe_app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // Currently only needed for spring-boot-devtools
    // https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

ext['junit-jupiter.version'] = '5.6.2'

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.webjars:bootstrap:3.3.7-1'

    // brings in the spring-web-mvc stack which uses the Servlet API and the ServletContainer; see:
    // implementation 'org.springframework.boot:spring-boot-starter-web'

    // brings in Spring reactive web; see: https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/web-reactive.html
    // the spring-webflux stack uses HTTP / Reactive Streams on Tomcat (alt.: Jetty, Netty, Undertow)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'io.projectreactor:reactor-test'

    // wenn @Nullable verwendet wird, kommt die Warnung 'Warning:java: unknown enum constant javax.annotation.meta.When.MAYBE'
    // Abhilfe (siehe: https://html.developreference.com/article/10955407/Spring+nullable+annotation+generates+unknown+enum+constant+warning):
    testImplementation 'com.google.code.findbugs:annotations:3.0.1'
}

test {
    useJUnitPlatform()
}

// export test coverage
// Based on the guide here: https://github.com/codecov/example-gradle
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

check.dependsOn jacocoTestReport
